{
    "sourceFile": "src/Components/TodoItem.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 127,
            "patches": [
                {
                    "date": 1715349613546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715349681920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React from 'react';\n import { Loader } from './Loader';\n import { deleteTodo } from '../api/todos';\n-import { Error } from '../types/Todo';\n+import { Error } from '..;\n \n interface Props {\n   id: number;\n   title: string;\n"
                },
                {
                    "date": 1715349688843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React from 'react';\n import { Loader } from './Loader';\n import { deleteTodo } from '../api/todos';\n-import { Error } from '..;\n+import { Error } from '../Types';\n \n interface Props {\n   id: number;\n   title: string;\n"
                },
                {
                    "date": 1715349696560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React from 'react';\n import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types';\n+import { deleteTodo } from '../';\n+import { Error } from '../Types/Todo';\n \n interface Props {\n   id: number;\n   title: string;\n"
                },
                {
                    "date": 1715349760548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React from 'react';\n import { Loader } from './Loader';\n-import { deleteTodo } from '../';\n+import { deleteTodo } from '../api/todos';\n import { Error } from '../Types/Todo';\n \n interface Props {\n   id: number;\n"
                },
                {
                    "date": 1715424614635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,10 @@\n   showLoader,\n   loadingTodoId,\n   deleteFewTodo,\n }) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n   const handleDelete = async () => {\n     setLoadingTodoId(id);\n     try {\n       await onDelete(id);\n"
                },
                {
                    "date": 1715424623069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,13 @@\n   deleteFewTodo,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n   const handleDelete = async () => {\n     setLoadingTodoId(id);\n     try {\n       await onDelete(id);\n"
                },
                {
                    "date": 1715424629522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,12 @@\n       setLoadingTodoId(null);\n     }\n   };\n \n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n   return (\n     <div\n       data-cy=\"Todo\"\n       data-id={id}\n"
                },
                {
                    "date": 1715424635915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,19 @@\n   const handleDoubleClick = () => {\n     setEditing(true);\n   };\n \n+  const handleBlur = () => {\n+    setEditing(false);\n+    // Save the edited title\n+    if (title.trim() !== initialTitle.trim()) {\n+      // Assuming there's a function to update the todo title\n+      // You should implement this function in the parent component and pass it as a prop\n+      // For example: const updateTodoTitle = (id: number, newTitle: string) => { ... }\n+      updateTodoTitle(id, title);\n+    }\n+  };\n+\n   return (\n     <div\n       data-cy=\"Todo\"\n       data-id={id}\n"
                },
                {
                    "date": 1715424642843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,13 +60,9 @@\n   };\n \n   const handleBlur = () => {\n     setEditing(false);\n-    // Save the edited title\n     if (title.trim() !== initialTitle.trim()) {\n-      // Assuming there's a function to update the todo title\n-      // You should implement this function in the parent component and pass it as a prop\n-      // For example: const updateTodoTitle = (id: number, newTitle: string) => { ... }\n       updateTodoTitle(id, title);\n     }\n   };\n \n"
                },
                {
                    "date": 1715424648629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,12 @@\n       updateTodoTitle(id, title);\n     }\n   };\n \n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n   return (\n     <div\n       data-cy=\"Todo\"\n       data-id={id}\n"
                },
                {
                    "date": 1715424700857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+\n       <label className=\"todo__status-label\">\n         <input\n           data-cy=\"TodoStatus\"\n           type=\"checkbox\"\n"
                },
                {
                    "date": 1715424713904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,11 +76,21 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-\n-      <label className=\"todo__status-label\">\n+      {editing ? (\n         <input\n+          className=\"todo__edit\"\n+          type=\"text\"\n+          value={title}\n+          onChange={handleChange}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      ) : (\n+        <>\n+      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n+        <input\n           data-cy=\"TodoStatus\"\n           type=\"checkbox\"\n           className=\"todo__status\"\n           checked={completed}\n"
                },
                {
                    "date": 1715424723008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n           data-cy=\"TodoStatus\"\n           type=\"checkbox\"\n           className=\"todo__status\"\n           checked={completed}\n-          onChange={onToggle}\n+          onChange={handl}\n         />\n       </label>\n \n       <span data-cy=\"TodoTitle\" className=\"todo__title\">\n"
                },
                {
                    "date": 1715424789028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,14 +88,15 @@\n         />\n       ) : (\n         <>\n       <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-        <input\n+\n+              <input\n           data-cy=\"TodoStatus\"\n           type=\"checkbox\"\n           className=\"todo__status\"\n           checked={completed}\n-          onChange={handl}\n+          onChange={handleToggle}\n         />\n       </label>\n \n       <span data-cy=\"TodoTitle\" className=\"todo__title\">\n"
                },
                {
                    "date": 1715424802960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n         />\n       ) : (\n         <>\n       <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-\n+  {initialTitle}\n               <input\n           data-cy=\"TodoStatus\"\n           type=\"checkbox\"\n           className=\"todo__status\"\n"
                },
                {
                    "date": 1715424808419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,10 +88,9 @@\n         />\n       ) : (\n         <>\n       <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-  {initialTitle}\n-              <input\n+        <input\n           data-cy=\"TodoStatus\"\n           type=\"checkbox\"\n           className=\"todo__status\"\n           checked={completed}\n"
                },
                {
                    "date": 1715424825847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,8 @@\n           checked={completed}\n           onChange={handleToggle}\n         />\n       </label>\n-\n       <span data-cy=\"TodoTitle\" className=\"todo__title\">\n         {title}\n       </span>\n \n"
                },
                {
                    "date": 1715424841210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n           checked={completed}\n           onChange={handleToggle}\n         />\n       </label>\n-      <span data-cy=\"TodoTitle\" className=\"todo__title\">\n+      <span data-cy=\"TodoTitle\" className=\"todo__title\"  onDoubleClick={handleDoubleClick}>\n         {title}\n       </span>\n \n       <button\n"
                },
                {
                    "date": 1715424855698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,10 @@\n         data-cy=\"TodoDelete\"\n         disabled={showLoader || deleteFewTodo.includes(id)}\n       >\n         ×\n-      </button>\n+            </button>\n+            \n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715424881880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+import React from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      updateTodoTitle(id, title);\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+      {editing ? (\n+        <input\n+          className=\"todo__edit\"\n+          type=\"text\"\n+          value={title}\n+          onChange={handleChange}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      ) : (\n+        <>\n+          <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n+            <input\n+              data-cy=\"TodoStatus\"\n+              type=\"checkbox\"\n+              className=\"todo__status\"\n+              checked={completed}\n+              onChange={handleToggle}\n+            />\n+          </label>\n+          <span data-cy=\"TodoTitle\" className=\"todo__title\" onDoubleClick={handleDoubleClick}>\n+            {initialTitle}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715424888701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,124 @@\n+import React from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      updateTodoTitle(id, title);\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+      {editing ? (\n+        <input\n+          className=\"todo__edit\"\n+          type=\"text\"\n+          value={title}\n+          onChange={handleChange}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      ) : (\n+        <>\n+          <label\n+            className=\"todo__status-label\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            <input\n+              data-cy=\"TodoStatus\"\n+              type=\"checkbox\"\n+              className=\"todo__status\"\n+              checked={completed}\n+              onChange={handleToggle}\n+            />\n+          </label>\n+          <span\n+            data-cy=\"TodoTitle\"\n+            className=\"todo__title\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            {title}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715424914035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,125 +104,8 @@\n             data-cy=\"TodoTitle\"\n             className=\"todo__title\"\n             onDoubleClick={handleDoubleClick}\n           >\n-            {title}\n-          </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n-        </>\n-      )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      updateTodoTitle(id, title);\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {editing ? (\n-        <input\n-          className=\"todo__edit\"\n-          type=\"text\"\n-          value={title}\n-          onChange={handleChange}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      ) : (\n-        <>\n-          <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-            <input\n-              data-cy=\"TodoStatus\"\n-              type=\"checkbox\"\n-              className=\"todo__status\"\n-              checked={completed}\n-              onChange={handleToggle}\n-            />\n-          </label>\n-          <span data-cy=\"TodoTitle\" className=\"todo__title\" onDoubleClick={handleDoubleClick}>\n             {initialTitle}\n           </span>\n           <button\n             type=\"button\"\n@@ -238,121 +121,4 @@\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n-import React from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      updateTodoTitle(id, title);\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {editing ? (\n-        <input\n-          className=\"todo__edit\"\n-          type=\"text\"\n-          value={title}\n-          onChange={handleChange}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      ) : (\n-        <>\n-      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-        <input\n-          data-cy=\"TodoStatus\"\n-          type=\"checkbox\"\n-          className=\"todo__status\"\n-          checked={completed}\n-          onChange={handleToggle}\n-        />\n-      </label>\n-      <span data-cy=\"TodoTitle\" className=\"todo__title\"  onDoubleClick={handleDoubleClick}>\n-        {title}\n-      </span>\n-\n-      <button\n-        type=\"button\"\n-        className=\"todo__remove\"\n-        onClick={handleDelete}\n-        data-cy=\"TodoDelete\"\n-        disabled={showLoader || deleteFewTodo.includes(id)}\n-      >\n-        ×\n-            </button>\n-            \n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1715424933351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from 'react';\n+import React, { useState } from 'react';\n import { Loader } from './Loader';\n import { deleteTodo } from '../api/todos';\n import { Error } from '../Types/Todo';\n \n"
                },
                {
                    "date": 1715424939443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   loadingTodoId,\n   deleteFewTodo,\n }) => {\n   const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n+  const [title, setTitle] = useState(title);\n \n   const handleToggle = () => {\n     onToggle();\n   };\n"
                },
                {
                    "date": 1715424959780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   loadingTodoId,\n   deleteFewTodo,\n }) => {\n   const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(title);\n+  const [title, setTitle] = useState(initialTitle);\n \n   const handleToggle = () => {\n     onToggle();\n   };\n"
                },
                {
                    "date": 1715425012695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,14 @@\n   setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n   showLoader: boolean;\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+  updateTodoTitle: (id: number, newTitle: string) => void;\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n"
                },
                {
                    "date": 1715425019716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,8 @@\n   setErrorType: (setErrorType: Error | null) => void;\n   onDelete: (id: number) => void;\n   loadingTodoId: number | null;\n   loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n   showLoader: boolean;\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n   setFocus: (setFocus: boolean) => void;\n"
                },
                {
                    "date": 1715425026738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,8 @@\n   setErrorType: (setErrorType: Error | null) => void;\n   onDelete: (id: number) => void;\n   loadingTodoId: number | null;\n   loadingAddTodoId: number | null;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n   setFocus: (setFocus: boolean) => void;\n   setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n   showLoader: boolean;\n   setLoading: (setLoading: boolean) => void;\n"
                },
                {
                    "date": 1715425038739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n-  title,\n+  title: initial,\n   completed,\n   onToggle,\n   setError,\n   setErrorType,\n"
                },
                {
                    "date": 1715425175351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n-  title: initial,\n+  title: initialTitle,\n   completed,\n   onToggle,\n   setError,\n   setErrorType,\n@@ -33,8 +33,9 @@\n   setLoadingTodoId,\n   showLoader,\n   loadingTodoId,\n   deleteFewTodo,\n+  updateTodoTitle\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n \n"
                },
                {
                    "date": 1715426012545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   setLoadingTodoId,\n   showLoader,\n   loadingTodoId,\n   deleteFewTodo,\n-  updateTodoTitle\n+  updateTodoTitle,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n \n@@ -71,8 +71,14 @@\n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n     setTitle(e.target.value);\n   };\n \n+  const handleKeyDown = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n+    if (e.key === 'Enter') {\n+      handleBlur();\n+    }\n+  };\n+\n   return (\n     <div\n       data-cy=\"Todo\"\n       data-id={id}\n"
                },
                {
                    "date": 1715426028027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n     setTitle(e.target.value);\n   };\n \n-  const handleKeyDown = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n+  const handleKeyDownE = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n     if (e.key === 'Enter') {\n       handleBlur();\n     }\n   };\n"
                },
                {
                    "date": 1715426043076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,11 @@\n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n     setTitle(e.target.value);\n   };\n \n-  const handleKeyDownE = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n+  const handleKeyDownEdit = async (\n+    e: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n     if (e.key === 'Enter') {\n       handleBlur();\n     }\n   };\n@@ -90,8 +92,9 @@\n           className=\"todo__edit\"\n           type=\"text\"\n           value={title}\n           onChange={handleChange}\n+          onKeyDown={handleKeyDown}\n           onBlur={handleBlur}\n           autoFocus\n         />\n       ) : (\n"
                },
                {
                    "date": 1715426063884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n           className=\"todo__edit\"\n           type=\"text\"\n           value={title}\n           onChange={handleChange}\n-          onKeyDown={handleKeyDown}\n+          onKeyDown={handleKeyDownEdit}\n           onBlur={handleBlur}\n           autoFocus\n         />\n       ) : (\n"
                },
                {
                    "date": 1715426437724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,135 @@\n+import React, { useState } from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+  updateTodoTitle: (id: number, newTitle: string) => void;\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title: initialTitle,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+  updateTodoTitle,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      updateTodoTitle(id, title);\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  const handleKeyDownEdit = async (\n+    e: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n+    if (e.key === 'Enter') {\n+      handleBlur();\n+    }\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+      {editing ? (\n+        <input\n+          className=\"todo__title-field\"\n+          type=\"text\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      ) : (\n+        <>\n+          <label\n+            className=\"todo__status-label\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            <input\n+              data-cy=\"TodoStatus\"\n+              type=\"checkbox\"\n+              className=\"todo__status\"\n+              checked={completed}\n+              onChange={handleToggle}\n+            />\n+          </label>\n+          <span\n+            data-cy=\"TodoTitle\"\n+            className=\"todo__title\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            {initialTitle}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715426482775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,8 +90,9 @@\n       {editing ? (\n         <input\n           className=\"todo__title-field\"\n           type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n           value={title}\n           onChange={handleChange}\n           onKeyDown={handleKeyDownEdit}\n           onBlur={handleBlur}\n@@ -132,139 +133,4 @@\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n-import React, { useState } from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-  updateTodoTitle: (id: number, newTitle: string) => void;\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title: initialTitle,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-  updateTodoTitle,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      updateTodoTitle(id, title);\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  const handleKeyDownEdit = async (\n-    e: React.KeyboardEvent<HTMLInputElement>,\n-  ) => {\n-    if (e.key === 'Enter') {\n-      handleBlur();\n-    }\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {editing ? (\n-        <input\n-          className=\"todo__edit\"\n-          type=\"text\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      ) : (\n-        <>\n-          <label\n-            className=\"todo__status-label\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            <input\n-              data-cy=\"TodoStatus\"\n-              type=\"checkbox\"\n-              className=\"todo__status\"\n-              checked={completed}\n-              onChange={handleToggle}\n-            />\n-          </label>\n-          <span\n-            data-cy=\"TodoTitle\"\n-            className=\"todo__title\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            {initialTitle}\n-          </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n-        </>\n-      )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1715426493433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,9 @@\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {editing ? (\n         <input\n           className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n           type=\"text\"\n           placeholder=\"Empty todo will be deleted\"\n           value={title}\n           onChange={handleChange}\n"
                },
                {
                    "date": 1715426531147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {editing ? (\n+      <form></form>{editing ? (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n"
                },
                {
                    "date": 1715426548879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      <form></form>{editing ? (\n+      <form>{editing ? (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n@@ -97,9 +97,9 @@\n           onChange={handleChange}\n           onKeyDown={handleKeyDownEdit}\n           onBlur={handleBlur}\n           autoFocus\n-        />\n+        /></form>\n       ) : (\n         <>\n           <label\n             className=\"todo__status-label\"\n"
                },
                {
                    "date": 1715426559063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,137 @@\n+import React, { useState } from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+  updateTodoTitle: (id: number, newTitle: string) => void;\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title: initialTitle,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+  updateTodoTitle,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      updateTodoTitle(id, title);\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  const handleKeyDownEdit = async (\n+    e: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n+    if (e.key === 'Enter') {\n+      handleBlur();\n+    }\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+      <form>{editing ? (\n+        <input\n+          className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n+          type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      ) : (\n+        <>\n+          <label\n+            className=\"todo__status-label\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            <input\n+              data-cy=\"TodoStatus\"\n+              type=\"checkbox\"\n+              className=\"todo__status\"\n+              checked={completed}\n+              onChange={handleToggle}\n+            />\n+          </label>\n+          <span\n+            data-cy=\"TodoTitle\"\n+            className=\"todo__title\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            {initialTitle}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715426571030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,146 +129,9 @@\n           >\n             ×\n           </button>\n         </>\n-      )}\n+      )}</form>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n-import React, { useState } from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-  updateTodoTitle: (id: number, newTitle: string) => void;\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title: initialTitle,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-  updateTodoTitle,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      updateTodoTitle(id, title);\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  const handleKeyDownEdit = async (\n-    e: React.KeyboardEvent<HTMLInputElement>,\n-  ) => {\n-    if (e.key === 'Enter') {\n-      handleBlur();\n-    }\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      <form>{editing ? (\n-        <input\n-          className=\"todo__title-field\"\n-          data-cy=\"TodoTitleField\"\n-          type=\"text\"\n-          placeholder=\"Empty todo will be deleted\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        /></form>\n-      ) : (\n-        <>\n-          <label\n-            className=\"todo__status-label\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            <input\n-              data-cy=\"TodoStatus\"\n-              type=\"checkbox\"\n-              className=\"todo__status\"\n-              checked={completed}\n-              onChange={handleToggle}\n-            />\n-          </label>\n-          <span\n-            data-cy=\"TodoTitle\"\n-            className=\"todo__title\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            {initialTitle}\n-          </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n-        </>\n-      )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1715426590548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,52 +86,53 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      <form>{editing ? (\n-        <input\n-          className=\"todo__title-field\"\n-          data-cy=\"TodoTitleField\"\n-          type=\"text\"\n-          placeholder=\"Empty todo will be deleted\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      ) : (\n-        <>\n-          <label\n-            className=\"todo__status-label\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            <input\n-              data-cy=\"TodoStatus\"\n-              type=\"checkbox\"\n-              className=\"todo__status\"\n-              checked={completed}\n-              onChange={handleToggle}\n-            />\n-          </label>\n-          <span\n-            data-cy=\"TodoTitle\"\n-            className=\"todo__title\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            {initialTitle}\n-          </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n-        </>\n-      )}</form>\n+        {editing ? (\n+          <input\n+            className=\"todo__title-field\"\n+            data-cy=\"TodoTitleField\"\n+            type=\"text\"\n+            placeholder=\"Empty todo will be deleted\"\n+            value={title}\n+            onChange={handleChange}\n+            onKeyDown={handleKeyDownEdit}\n+            onBlur={handleBlur}\n+            autoFocus\n+          />\n+        ) : (\n+          <>\n+            <label\n+              className=\"todo__status-label\"\n+              onDoubleClick={handleDoubleClick}\n+            >\n+              <input\n+                data-cy=\"TodoStatus\"\n+                type=\"checkbox\"\n+                className=\"todo__status\"\n+                checked={completed}\n+                onChange={handleToggle}\n+              />\n+            </label>\n+            <span\n+              data-cy=\"TodoTitle\"\n+              className=\"todo__title\"\n+              onDoubleClick={handleDoubleClick}\n+            >\n+              {initialTitle}\n+            </span>\n+            <button\n+              type=\"button\"\n+              className=\"todo__remove\"\n+              onClick={handleDelete}\n+              data-cy=\"TodoDelete\"\n+              disabled={showLoader || deleteFewTodo.includes(id)}\n+            >\n+              ×\n+            </button>\n+          </>\n+        )}\n+      </form>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715426620267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,53 +86,53 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-        {editing ? (\n-          <input\n-            className=\"todo__title-field\"\n-            data-cy=\"TodoTitleField\"\n-            type=\"text\"\n-            placeholder=\"Empty todo will be deleted\"\n-            value={title}\n-            onChange={handleChange}\n-            onKeyDown={handleKeyDownEdit}\n-            onBlur={handleBlur}\n-            autoFocus\n-          />\n-        ) : (\n-          <>\n-            <label\n-              className=\"todo__status-label\"\n-              onDoubleClick={handleDoubleClick}\n-            >\n-              <input\n-                data-cy=\"TodoStatus\"\n-                type=\"checkbox\"\n-                className=\"todo__status\"\n-                checked={completed}\n-                onChange={handleToggle}\n-              />\n-            </label>\n-            <span\n-              data-cy=\"TodoTitle\"\n-              className=\"todo__title\"\n-              onDoubleClick={handleDoubleClick}\n-            >\n-              {initialTitle}\n-            </span>\n-            <button\n-              type=\"button\"\n-              className=\"todo__remove\"\n-              onClick={handleDelete}\n-              data-cy=\"TodoDelete\"\n-              disabled={showLoader || deleteFewTodo.includes(id)}\n-            >\n-              ×\n-            </button>\n-          </>\n-        )}\n-      </form>\n+      </button>\n+      {editing ? (\n+        <input\n+          className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n+          type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      ) : (\n+        <>\n+          <label\n+            className=\"todo__status-label\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            <input\n+              data-cy=\"TodoStatus\"\n+              type=\"checkbox\"\n+              className=\"todo__status\"\n+              checked={completed}\n+              onChange={handleToggle}\n+            />\n+          </label>\n+          <span\n+            data-cy=\"TodoTitle\"\n+            className=\"todo__title\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            {initialTitle}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      )}\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715426633901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,10 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      </button>\n       {editing ? (\n-        <input\n+        <form></form><input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n           placeholder=\"Empty todo will be deleted\"\n"
                },
                {
                    "date": 1715426643973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {editing ? (\n-        <form></form><input\n+        <form><input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n           placeholder=\"Empty todo will be deleted\"\n@@ -97,9 +97,9 @@\n           onChange={handleChange}\n           onKeyDown={handleKeyDownEdit}\n           onBlur={handleBlur}\n           autoFocus\n-        />\n+        /></form>\n       ) : (\n         <>\n           <label\n             className=\"todo__status-label\"\n"
                },
                {
                    "date": 1715426682964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,19 +87,21 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {editing ? (\n-        <form><input\n-          className=\"todo__title-field\"\n-          data-cy=\"TodoTitleField\"\n-          type=\"text\"\n-          placeholder=\"Empty todo will be deleted\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        /></form>\n+        <form>\n+          <input\n+            className=\"todo__title-field\"\n+            data-cy=\"TodoTitleField\"\n+            type=\"text\"\n+            placeholder=\"Empty todo will be deleted\"\n+            value={value=\"Todo is being edited now\"}\n+            onChange={handleChange}\n+            onKeyDown={handleKeyDownEdit}\n+            onBlur={handleBlur}\n+            autoFocus\n+          />\n+        </form>\n       ) : (\n         <>\n           <label\n             className=\"todo__status-label\"\n"
                },
                {
                    "date": 1715426861352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,15 +87,14 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {editing ? (\n-        <form>\n           <input\n             className=\"todo__title-field\"\n             data-cy=\"TodoTitleField\"\n             type=\"text\"\n             placeholder=\"Empty todo will be deleted\"\n-            value={value=\"Todo is being edited now\"}\n+            value={title}\n             onChange={handleChange}\n             onKeyDown={handleKeyDownEdit}\n             onBlur={handleBlur}\n             autoFocus\n"
                },
                {
                    "date": 1715426866907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,20 +87,19 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {editing ? (\n-          <input\n-            className=\"todo__title-field\"\n-            data-cy=\"TodoTitleField\"\n-            type=\"text\"\n-            placeholder=\"Empty todo will be deleted\"\n-            value={title}\n-            onChange={handleChange}\n-            onKeyDown={handleKeyDownEdit}\n-            onBlur={handleBlur}\n-            autoFocus\n-          />\n-        </form>\n+        <input\n+          className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n+          type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n       ) : (\n         <>\n           <label\n             className=\"todo__status-label\"\n"
                },
                {
                    "date": 1715426874263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {editing ? (\n+      {!editing ? (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n"
                },
                {
                    "date": 1715426899165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,38 +87,27 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {!editing ? (\n-        <input\n-          className=\"todo__title-field\"\n-          data-cy=\"TodoTitleField\"\n-          type=\"text\"\n-          placeholder=\"Empty todo will be deleted\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      ) : (\n-        <>\n-          <label\n-            className=\"todo__status-label\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            <input\n-              data-cy=\"TodoStatus\"\n-              type=\"checkbox\"\n-              className=\"todo__status\"\n-              checked={completed}\n-              onChange={handleToggle}\n-            />\n-          </label>\n-          <span\n-            data-cy=\"TodoTitle\"\n-            className=\"todo__title\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n+      <>\n+        <label\n+          className=\"todo__status-label\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          <input\n+            data-cy=\"TodoStatus\"\n+            type=\"checkbox\"\n+            className=\"todo__status\"\n+            checked={completed}\n+            onChange={handleToggle}\n+          />\n+        </label>\n+        <span\n+          data-cy=\"TodoTitle\"\n+          className=\"todo__title\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          {initialTitle}\n             {initialTitle}\n           </span>\n           <button\n             type=\"button\"\n"
                },
                {
                    "date": 1715426906764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useState } from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+  updateTodoTitle: (id: number, newTitle: string) => void;\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title: initialTitle,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+  updateTodoTitle,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      updateTodoTitle(id, title);\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  const handleKeyDownEdit = async (\n+    e: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n+    if (e.key === 'Enter') {\n+      handleBlur();\n+    }\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+      {!editing ? (\n+      <>\n+        <label\n+          className=\"todo__status-label\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          <input\n+            data-cy=\"TodoStatus\"\n+            type=\"checkbox\"\n+            className=\"todo__status\"\n+            checked={completed}\n+            onChange={handleToggle}\n+          />\n+        </label>\n+        <span\n+          data-cy=\"TodoTitle\"\n+          className=\"todo__title\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          {initialTitle}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715426924513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,146 +106,31 @@\n           className=\"todo__title\"\n           onDoubleClick={handleDoubleClick}\n         >\n           {initialTitle}\n-          </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n-        </>\n-      )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n-import React, { useState } from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-  updateTodoTitle: (id: number, newTitle: string) => void;\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title: initialTitle,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-  updateTodoTitle,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      updateTodoTitle(id, title);\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  const handleKeyDownEdit = async (\n-    e: React.KeyboardEvent<HTMLInputElement>,\n-  ) => {\n-    if (e.key === 'Enter') {\n-      handleBlur();\n-    }\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {!editing ? (\n-      <>\n-        <label\n-          className=\"todo__status-label\"\n-          onDoubleClick={handleDoubleClick}\n+        </span>\n+        <button\n+          type=\"button\"\n+          className=\"todo__remove\"\n+          onClick={handleDelete}\n+          data-cy=\"TodoDelete\"\n+          disabled={showLoader || deleteFewTodo.includes(id)}\n         >\n-          <input\n-            data-cy=\"TodoStatus\"\n-            type=\"checkbox\"\n-            className=\"todo__status\"\n-            checked={completed}\n-            onChange={handleToggle}\n-          />\n-        </label>\n-        <span\n-          data-cy=\"TodoTitle\"\n-          className=\"todo__title\"\n-          onDoubleClick={handleDoubleClick}\n-        >\n-          {initialTitle}\n-            {initialTitle}\n-          </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n-        </>\n-      )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n+          ×\n+        </button>\n+      </>\n+    ) : (\n+      <input\n+        className=\"todo__title-field\"\n+        data-cy=\"TodoTitleField\"\n+        type=\"text\"\n+        placeholder=\"Empty todo will be deleted\"\n+        value={title}\n+        onChange={handleChange}\n+        onKeyDown={handleKeyDownEdit}\n+        onBlur={handleBlur}\n+        autoFocus\n+      />\n+    )}\n+    <Loader loading={showLoader || loadingTodoId === id} />\n+  </div>\n+);\n"
                },
                {
                    "date": 1715426932527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,50 +87,50 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n       {!editing ? (\n-      <>\n-        <label\n-          className=\"todo__status-label\"\n-          onDoubleClick={handleDoubleClick}\n-        >\n-          <input\n-            data-cy=\"TodoStatus\"\n-            type=\"checkbox\"\n-            className=\"todo__status\"\n-            checked={completed}\n-            onChange={handleToggle}\n-          />\n-        </label>\n-        <span\n-          data-cy=\"TodoTitle\"\n-          className=\"todo__title\"\n-          onDoubleClick={handleDoubleClick}\n-        >\n-          {initialTitle}\n-        </span>\n-        <button\n-          type=\"button\"\n-          className=\"todo__remove\"\n-          onClick={handleDelete}\n-          data-cy=\"TodoDelete\"\n-          disabled={showLoader || deleteFewTodo.includes(id)}\n-        >\n-          ×\n-        </button>\n-      </>\n-    ) : (\n-      <input\n-        className=\"todo__title-field\"\n-        data-cy=\"TodoTitleField\"\n-        type=\"text\"\n-        placeholder=\"Empty todo will be deleted\"\n-        value={title}\n-        onChange={handleChange}\n-        onKeyDown={handleKeyDownEdit}\n-        onBlur={handleBlur}\n-        autoFocus\n-      />\n-    )}\n-    <Loader loading={showLoader || loadingTodoId === id} />\n-  </div>\n-);\n+        <>\n+          <label\n+            className=\"todo__status-label\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            <input\n+              data-cy=\"TodoStatus\"\n+              type=\"checkbox\"\n+              className=\"todo__status\"\n+              checked={completed}\n+              onChange={handleToggle}\n+            />\n+          </label>\n+          <span\n+            data-cy=\"TodoTitle\"\n+            className=\"todo__title\"\n+            onDoubleClick={handleDoubleClick}\n+          >\n+            {initialTitle}\n+          </span>\n+          <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n+        </>\n+      ) : (\n+        <input\n+          className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n+          type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n"
                },
                {
                    "date": 1715426942669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,5 +132,6 @@\n         />\n       )}\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n-  );\n+  )\n+};\n"
                },
                {
                    "date": 1715579931940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {!editing ? (\n+      {editing ? (\n         <>\n           <label\n             className=\"todo__status-label\"\n             onDoubleClick={handleDoubleClick}\n@@ -132,6 +132,6 @@\n         />\n       )}\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n-  )\n+  );\n };\n"
                },
                {
                    "date": 1715579943578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {editing ? (\n+      {!editing ? (\n         <>\n           <label\n             className=\"todo__status-label\"\n             onDoubleClick={handleDoubleClick}\n"
                },
                {
                    "date": 1715580004812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n }) => {\n-  const [editing, setEditing] = useState(false);\n+  const [editing, setEditing] = useState(true);\n   const [title, setTitle] = useState(initialTitle);\n \n   const handleToggle = () => {\n     onToggle();\n"
                },
                {
                    "date": 1715580248860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n }) => {\n-  const [editing, setEditing] = useState(true);\n+  const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n \n   const handleToggle = () => {\n     onToggle();\n"
                },
                {
                    "date": 1715580680607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \n   const handleDelete = async () => {\n     setLoadingTodoId(id);\n     try {\n-      await onDelete(id);\n+      onDelete(id);\n       await deleteTodo(id);\n       setFocus(true);\n     } catch (err) {\n       setError(true);\n"
                },
                {
                    "date": 1715580749524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \n   const handleDelete = async () => {\n     setLoadingTodoId(id);\n     try {\n-      onDelete(id);\n+      await onDelete(id);\n       await deleteTodo(id);\n       setFocus(true);\n     } catch (err) {\n       setError(true);\n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-      {!editing ? (\n+       (\n         <>\n           <label\n             className=\"todo__status-label\"\n             onDoubleClick={handleDoubleClick}\n"
                },
                {
                    "date": 1715580758899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,8 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-       (\n         <>\n           <label\n             className=\"todo__status-label\"\n             onDoubleClick={handleDoubleClick}\n@@ -100,9 +99,9 @@\n               checked={completed}\n               onChange={handleToggle}\n             />\n           </label>\n-          <span\n+          {!editing ? <span\n             data-cy=\"TodoTitle\"\n             className=\"todo__title\"\n             onDoubleClick={handleDoubleClick}\n           >\n"
                },
                {
                    "date": 1715580771681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,10 @@\n               checked={completed}\n               onChange={handleToggle}\n             />\n           </label>\n-          {!editing ? <span\n+        {!editing ? (\n+          <span\n             data-cy=\"TodoTitle\"\n             className=\"todo__title\"\n             onDoubleClick={handleDoubleClick}\n           >\n"
                },
                {
                    "date": 1715580785386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n           >\n             ×\n           </button>\n         </>\n-      ) : (\n+     \n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n"
                },
                {
                    "date": 1715580801753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,9 @@\n             className=\"todo__title\"\n             onDoubleClick={handleDoubleClick}\n           >\n             {initialTitle}\n+       \n           </span>\n           <button\n             type=\"button\"\n             className=\"todo__remove\"\n@@ -117,9 +118,9 @@\n           >\n             ×\n           </button>\n         </>\n-     \n+\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n"
                },
                {
                    "date": 1715580819638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,8 @@\n             className=\"todo__title\"\n             onDoubleClick={handleDoubleClick}\n           >\n             {initialTitle}\n-       \n           </span>\n           <button\n             type=\"button\"\n             className=\"todo__remove\"\n@@ -118,9 +117,9 @@\n           >\n             ×\n           </button>\n         </>\n-\n+      ) : (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n           type=\"text\"\n"
                },
                {
                    "date": 1715580826488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-        <>\n+     \n           <label\n             className=\"todo__status-label\"\n             onDoubleClick={handleDoubleClick}\n           >\n@@ -116,9 +116,9 @@\n             disabled={showLoader || deleteFewTodo.includes(id)}\n           >\n             ×\n           </button>\n-        </>\n+\n       ) : (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n"
                },
                {
                    "date": 1715580858423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n       data-id={id}\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-     \n+\n           <label\n             className=\"todo__status-label\"\n             onDoubleClick={handleDoubleClick}\n           >\n@@ -107,17 +107,9 @@\n             onDoubleClick={handleDoubleClick}\n           >\n             {initialTitle}\n           </span>\n-          <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n+       \n \n       ) : (\n         <input\n           className=\"todo__title-field\"\n"
                },
                {
                    "date": 1715580863624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,10 +107,10 @@\n             onDoubleClick={handleDoubleClick}\n           >\n             {initialTitle}\n           </span>\n-       \n \n+\n       ) : (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n@@ -122,8 +122,17 @@\n           onBlur={handleBlur}\n           autoFocus\n         />\n       )}\n+         <button\n+            type=\"button\"\n+            className=\"todo__remove\"\n+            onClick={handleDelete}\n+            data-cy=\"TodoDelete\"\n+            disabled={showLoader || deleteFewTodo.includes(id)}\n+          >\n+            ×\n+          </button>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715580872134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,30 +87,25 @@\n       className={`todo ${completed ? 'completed' : ''}`}\n     >\n       {/* eslint-disable jsx-a11y/label-has-associated-control */}\n \n-          <label\n-            className=\"todo__status-label\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            <input\n-              data-cy=\"TodoStatus\"\n-              type=\"checkbox\"\n-              className=\"todo__status\"\n-              checked={completed}\n-              onChange={handleToggle}\n-            />\n-          </label>\n-        {!editing ? (\n-          <span\n-            data-cy=\"TodoTitle\"\n-            className=\"todo__title\"\n-            onDoubleClick={handleDoubleClick}\n-          >\n-            {initialTitle}\n-          </span>\n-\n-\n+      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n+        <input\n+          data-cy=\"TodoStatus\"\n+          type=\"checkbox\"\n+          className=\"todo__status\"\n+          checked={completed}\n+          onChange={handleToggle}\n+        />\n+      </label>\n+      {!editing ? (\n+        <span\n+          data-cy=\"TodoTitle\"\n+          className=\"todo__title\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          {initialTitle}\n+        </span>\n       ) : (\n         <input\n           className=\"todo__title-field\"\n           data-cy=\"TodoTitleField\"\n@@ -122,17 +117,17 @@\n           onBlur={handleBlur}\n           autoFocus\n         />\n       )}\n-         <button\n-            type=\"button\"\n-            className=\"todo__remove\"\n-            onClick={handleDelete}\n-            data-cy=\"TodoDelete\"\n-            disabled={showLoader || deleteFewTodo.includes(id)}\n-          >\n-            ×\n-          </button>\n+      <button\n+        type=\"button\"\n+        className=\"todo__remove\"\n+        onClick={handleDelete}\n+        data-cy=\"TodoDelete\"\n+        disabled={showLoader || deleteFewTodo.includes(id)}\n+      >\n+        ×\n+      </button>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581078720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,17 +117,9 @@\n           onBlur={handleBlur}\n           autoFocus\n         />\n       )}\n-      <button\n-        type=\"button\"\n-        className=\"todo__remove\"\n-        onClick={handleDelete}\n-        data-cy=\"TodoDelete\"\n-        disabled={showLoader || deleteFewTodo.includes(id)}\n-      >\n-        ×\n-      </button>\n+    \n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581094070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,18 @@\n           onBlur={handleBlur}\n           autoFocus\n         />\n       )}\n-    \n+\n       <Loader loading={showLoader || loadingTodoId === id} />\n+        <button\n+        type=\"button\"\n+        className=\"todo__remove\"\n+        onClick={handleDelete}\n+        data-cy=\"TodoDelete\"\n+        disabled={showLoader || deleteFewTodo.includes(id)}\n+      >\n+        ×\n+      </button>\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581232841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,18 +117,17 @@\n           onBlur={handleBlur}\n           autoFocus\n         />\n       )}\n-\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-        <button\n+      <button\n         type=\"button\"\n         className=\"todo__remove\"\n         onClick={handleDelete}\n         data-cy=\"TodoDelete\"\n         disabled={showLoader || deleteFewTodo.includes(id)}\n       >\n         ×\n-      </button>\n+      {</button>\n+      <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581238002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n         data-cy=\"TodoDelete\"\n         disabled={showLoader || deleteFewTodo.includes(id)}\n       >\n         ×\n-      {</button>\n+      {!editing</button>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581243045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,10 @@\n         data-cy=\"TodoDelete\"\n         disabled={showLoader || deleteFewTodo.includes(id)}\n       >\n         ×\n-      {!editing</button>\n+        {!editing && (\n+        </button>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581248207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,8 @@\n         data-cy=\"TodoDelete\"\n         disabled={showLoader || deleteFewTodo.includes(id)}\n       >\n         ×\n-        {!editing && (\n         </button>\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n"
                },
                {
                    "date": 1715581254883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,17 +117,18 @@\n           onBlur={handleBlur}\n           autoFocus\n         />\n       )}\n-      <button\n-        type=\"button\"\n-        className=\"todo__remove\"\n-        onClick={handleDelete}\n-        data-cy=\"TodoDelete\"\n-        disabled={showLoader || deleteFewTodo.includes(id)}\n-      >\n-        ×\n-        </button>\n+      {!editing && (\n+        <button\n+          type=\"button\"\n+          className=\"todo__remove\"\n+          onClick={handleDelete}\n+          data-cy=\"TodoDelete\"\n+          disabled={showLoader || deleteFewTodo.includes(id)}\n+        >\n+          ×\n+        </button>}\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581260571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n           data-cy=\"TodoDelete\"\n           disabled={showLoader || deleteFewTodo.includes(id)}\n         >\n           ×\n-        </button>}\n+        </button>)}\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581312880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,10 @@\n           data-cy=\"TodoDelete\"\n           disabled={showLoader || deleteFewTodo.includes(id)}\n         >\n           ×\n-        </button>)}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n+        </button>\n+      )}\n+       {!editing && (<Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581318500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,8 @@\n         >\n           ×\n         </button>\n       )}\n-       {!editing && (<Loader loading={showLoader || loadingTodoId === id} />\n+      {!editing && (<Loader loading={showLoader || loadingTodoId === id} />)}\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581338450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,8 @@\n         >\n           ×\n         </button>\n       )}\n-      {!editing && (<Loader loading={showLoader || loadingTodoId === id} />)}\n+       {!editing && (<Loader loading={showLoader || loadingTodoId === id} />)}\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581551593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n   showLoader: boolean;\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n   updateTodoTitle: (id: number, newTitle: string) => void;\n+  loading,\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n@@ -128,8 +129,8 @@\n         >\n           ×\n         </button>\n       )}\n-       {!editing && (<Loader loading={showLoader || loadingTodoId === id} />)}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581556984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   showLoader: boolean;\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n   updateTodoTitle: (id: number, newTitle: string) => void;\n-  loading,\n+  loading: boolean;\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n"
                },
                {
                    "date": 1715581562302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n   showLoader,\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n+  loading,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n \n"
                },
                {
                    "date": 1715581625267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n \n   const handleBlur = () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n+      \n       updateTodoTitle(id, title);\n     }\n   };\n \n"
                },
                {
                    "date": 1715581630518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n \n   const handleBlur = () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n-      \n+      setLoading\n       updateTodoTitle(id, title);\n     }\n   };\n \n"
                },
                {
                    "date": 1715581639613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,12 @@\n \n   const handleBlur = () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n-      setLoading\n+      setLoadingTodoId(true);\n+      try {\n+        \n+      }\n       updateTodoTitle(id, title);\n     }\n   };\n \n"
                },
                {
                    "date": 1715581645189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,11 @@\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n       setLoadingTodoId(true);\n       try {\n-        \n+\n       }\n-      updateTodoTitle(id, title);\n+      \n     }\n   };\n \n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1715581656549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,11 @@\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n       setLoadingTodoId(true);\n       try {\n+await updateTodoTitle(id, title);\n+      } catch \n \n-      }\n-      \n     }\n   };\n \n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1715581661619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     if (title.trim() !== initialTitle.trim()) {\n       setLoadingTodoId(true);\n       try {\n await updateTodoTitle(id, title);\n-      } catch \n+      } catch (err) \n \n     }\n   };\n \n"
                },
                {
                    "date": 1715581668189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,11 @@\n     if (title.trim() !== initialTitle.trim()) {\n       setLoadingTodoId(true);\n       try {\n await updateTodoTitle(id, title);\n-      } catch (err) \n+      } catch (err) {\n+        setError\n+      }\n \n     }\n   };\n \n"
                },
                {
                    "date": 1715581675809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,10 @@\n       setLoadingTodoId(true);\n       try {\n await updateTodoTitle(id, title);\n       } catch (err) {\n-        setError\n+        setError(true);\n+        setErr\n       }\n \n     }\n   };\n"
                },
                {
                    "date": 1715581681996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n       try {\n await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n-        setErr\n+        setErrorType(]update)\n       }\n \n     }\n   };\n"
                },
                {
                    "date": 1715581688428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n       try {\n await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n-        setErrorType(]update)\n+        setErrorType('update');\n       }\n \n     }\n   };\n"
                },
                {
                    "date": 1715581694337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n-      }\n+      } finally {}\n \n     }\n   };\n \n"
                },
                {
                    "date": 1715581700437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,11 @@\n await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n-      } finally {}\n+      } finally {\n+        setLoadingTodoId(false)\n+      }\n \n     }\n   };\n \n"
                },
                {
                    "date": 1715581707916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,16 +65,16 @@\n \n   const handleBlur = () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n-      setLoadingTodoId(true);\n+      setLoading(true);\n       try {\n await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n       } finally {\n-        setLoadingTodoId(false)\n+        setLoadingTodoId(false);\n       }\n \n     }\n   };\n"
                },
                {
                    "date": 1715581717543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import React, { useState } from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+  updateTodoTitle: (id: number, newTitle: string) => void;\n+  loading: boolean;\n+  setLoading\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title: initialTitle,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+  updateTodoTitle,\n+  loading,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      setLoading(true);\n+      try {\n+await updateTodoTitle(id, title);\n+      } catch (err) {\n+        setError(true);\n+        setErrorType('update');\n+      } finally {\n+        setLoading(false);\n+      }\n+\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  const handleKeyDownEdit = async (\n+    e: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n+    if (e.key === 'Enter') {\n+      handleBlur();\n+    }\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+\n+      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n+        <input\n+          data-cy=\"TodoStatus\"\n+          type=\"checkbox\"\n+          className=\"todo__status\"\n+          checked={completed}\n+          onChange={handleToggle}\n+        />\n+      </label>\n+      {!editing ? (\n+        <span\n+          data-cy=\"TodoTitle\"\n+          className=\"todo__title\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          {initialTitle}\n+        </span>\n+      ) : (\n+        <input\n+          className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n+          type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      )}\n+      {!editing && (\n+        <button\n+          type=\"button\"\n+          className=\"todo__remove\"\n+          onClick={handleDelete}\n+          data-cy=\"TodoDelete\"\n+          disabled={showLoader || deleteFewTodo.includes(id)}\n+        >\n+          ×\n+        </button>\n+      )}\n+      <Loader loading={showLoader || loadingTodoId === id} />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715581723096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n   updateTodoTitle: (id: number, newTitle: string) => void;\n   loading: boolean;\n-  setLoading\n+  setLoading: () => void\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n@@ -144,150 +144,4 @@\n       <Loader loading={showLoader || loadingTodoId === id} />\n     </div>\n   );\n };\n-import React, { useState } from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-  updateTodoTitle: (id: number, newTitle: string) => void;\n-  loading: boolean;\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title: initialTitle,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-  updateTodoTitle,\n-  loading,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      setLoading(true);\n-      try {\n-await updateTodoTitle(id, title);\n-      } catch (err) {\n-        setError(true);\n-        setErrorType('update');\n-      } finally {\n-        setLoadingTodoId(false);\n-      }\n-\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  const handleKeyDownEdit = async (\n-    e: React.KeyboardEvent<HTMLInputElement>,\n-  ) => {\n-    if (e.key === 'Enter') {\n-      handleBlur();\n-    }\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-\n-      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-        <input\n-          data-cy=\"TodoStatus\"\n-          type=\"checkbox\"\n-          className=\"todo__status\"\n-          checked={completed}\n-          onChange={handleToggle}\n-        />\n-      </label>\n-      {!editing ? (\n-        <span\n-          data-cy=\"TodoTitle\"\n-          className=\"todo__title\"\n-          onDoubleClick={handleDoubleClick}\n-        >\n-          {initialTitle}\n-        </span>\n-      ) : (\n-        <input\n-          className=\"todo__title-field\"\n-          data-cy=\"TodoTitleField\"\n-          type=\"text\"\n-          placeholder=\"Empty todo will be deleted\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      )}\n-      {!editing && (\n-        <button\n-          type=\"button\"\n-          className=\"todo__remove\"\n-          onClick={handleDelete}\n-          data-cy=\"TodoDelete\"\n-          disabled={showLoader || deleteFewTodo.includes(id)}\n-        >\n-          ×\n-        </button>\n-      )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1715581728685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n   updateTodoTitle: (id: number, newTitle: string) => void;\n   loading: boolean;\n-  setLoading: () => void\n+  setLoading: () => void;\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n@@ -37,8 +37,9 @@\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n   loading,\n+  setLoading,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n \n"
                },
                {
                    "date": 1715581743757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n   showLoader,\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n-  loading,\n+,\n   setLoading,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n"
                },
                {
                    "date": 1715581751380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n   setLoading: (setLoading: boolean) => void;\n   deleteFewTodo: number[];\n   updateTodoTitle: (id: number, newTitle: string) => void;\n   loading: boolean;\n-  setLoading: () => void;\n }\n \n export const TodoItem: React.FC<Props> = ({\n   id,\n@@ -36,9 +35,8 @@\n   showLoader,\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n-,\n   setLoading,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n"
                },
                {
                    "date": 1715581760195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n       setLoading(true);\n       try {\n-await updateTodoTitle(id, title);\n+        await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n       } finally {\n"
                },
                {
                    "date": 1715581781788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n   const handleDoubleClick = () => {\n     setEditing(true);\n   };\n \n-  const handleBlur = () => {\n+  const handleBlur = async () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n       setLoading(true);\n       try {\n@@ -74,9 +74,8 @@\n         setErrorType('update');\n       } finally {\n         setLoading(false);\n       }\n-\n     }\n   };\n \n   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n"
                },
                {
                    "date": 1715581880470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,19 +62,20 @@\n   const handleDoubleClick = () => {\n     setEditing(true);\n   };\n \n+\n   const handleBlur = async () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n-      setLoading(true);\n+      setLoading(true); // Ustawienie stanu ładowania na true podczas wysyłania zapytania do serwera\n       try {\n         await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n       } finally {\n-        setLoading(false);\n+        setLoading(false); // Ustawienie stanu ładowania na false po otrzymaniu odpowiedzi z serwera\n       }\n     }\n   };\n \n"
                },
                {
                    "date": 1715581887644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,20 +62,19 @@\n   const handleDoubleClick = () => {\n     setEditing(true);\n   };\n \n-\n   const handleBlur = async () => {\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n-      setLoading(true); // Ustawienie stanu ładowania na true podczas wysyłania zapytania do serwera\n+      setLoading(true);\n       try {\n         await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n       } finally {\n-        setLoading(false); // Ustawienie stanu ładowania na false po otrzymaniu odpowiedzi z serwera\n+        setLoading(false);\n       }\n     }\n   };\n \n"
                },
                {
                    "date": 1715581907899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,8 +138,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={showLoader || loadingTodoId === id} />\n+      <Loader loading={showLoader ||  || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581919281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n   loadingTodoId,\n   deleteFewTodo,\n   updateTodoTitle,\n   setLoading,\n+  loading,\n }) => {\n   const [editing, setEditing] = useState(false);\n   const [title, setTitle] = useState(initialTitle);\n \n@@ -138,8 +139,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={showLoader ||  || loadingTodoId === id} />\n+      <Loader loading={showLoader || loading || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715581999220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={showLoader || loading || loadingTodoId === id} />\n+      <Loader loading={loading />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715582089404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={loading />\n+      <Loader loading={showLoader || loading || loadingTodoId === id ||} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715582094645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,10 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={showLoader || loading || loadingTodoId === id ||} />\n+      <Loader\n+        loading={showLoader || loading || loadingTodoId === id || editing}\n+      />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715582192296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,9 @@\n   const handleKeyDownEdit = async (\n     e: React.KeyboardEvent<HTMLInputElement>,\n   ) => {\n     if (e.key === 'Enter') {\n+      set\n       handleBlur();\n     }\n   };\n \n"
                },
                {
                    "date": 1715582198575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n   const handleKeyDownEdit = async (\n     e: React.KeyboardEvent<HTMLInputElement>,\n   ) => {\n     if (e.key === 'Enter') {\n-      set\n+      setLoading(true);\n       handleBlur();\n     }\n   };\n \n"
                },
                {
                    "date": 1715582204848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n     e: React.KeyboardEvent<HTMLInputElement>,\n   ) => {\n     if (e.key === 'Enter') {\n       setLoading(true);\n-      handleBlur();\n+      await handleBlur();\n     }\n   };\n \n   return (\n"
                },
                {
                    "date": 1715582211932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n   ) => {\n     if (e.key === 'Enter') {\n       setLoading(true);\n       await handleBlur();\n+      s\n     }\n   };\n \n   return (\n"
                },
                {
                    "date": 1715582217549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n   ) => {\n     if (e.key === 'Enter') {\n       setLoading(true);\n       await handleBlur();\n-      s\n+      setLoading(false)\n     }\n   };\n \n   return (\n"
                },
                {
                    "date": 1715582230300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,150 @@\n+import React, { useState } from 'react';\n+import { Loader } from './Loader';\n+import { deleteTodo } from '../api/todos';\n+import { Error } from '../Types/Todo';\n+\n+interface Props {\n+  id: number;\n+  title: string;\n+  completed: boolean;\n+  onToggle: () => void;\n+  setError: (setError: boolean) => void;\n+  setErrorType: (setErrorType: Error | null) => void;\n+  onDelete: (id: number) => void;\n+  loadingTodoId: number | null;\n+  loadingAddTodoId: number | null;\n+  setFocus: (setFocus: boolean) => void;\n+  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n+  showLoader: boolean;\n+  setLoading: (setLoading: boolean) => void;\n+  deleteFewTodo: number[];\n+  updateTodoTitle: (id: number, newTitle: string) => void;\n+  loading: boolean;\n+}\n+\n+export const TodoItem: React.FC<Props> = ({\n+  id,\n+  title: initialTitle,\n+  completed,\n+  onToggle,\n+  setError,\n+  setErrorType,\n+  onDelete,\n+  setFocus,\n+  setLoadingTodoId,\n+  showLoader,\n+  loadingTodoId,\n+  deleteFewTodo,\n+  updateTodoTitle,\n+  setLoading,\n+  loading,\n+}) => {\n+  const [editing, setEditing] = useState(false);\n+  const [title, setTitle] = useState(initialTitle);\n+\n+  const handleToggle = () => {\n+    onToggle();\n+  };\n+\n+  const handleDelete = async () => {\n+    setLoadingTodoId(id);\n+    try {\n+      await onDelete(id);\n+      await deleteTodo(id);\n+      setFocus(true);\n+    } catch (err) {\n+      setError(true);\n+      setErrorType('delete');\n+    } finally {\n+      setLoadingTodoId(null);\n+    }\n+  };\n+\n+  const handleDoubleClick = () => {\n+    setEditing(true);\n+  };\n+\n+  const handleBlur = async () => {\n+    setEditing(false);\n+    if (title.trim() !== initialTitle.trim()) {\n+      setLoading(true);\n+      try {\n+        await updateTodoTitle(id, title);\n+      } catch (err) {\n+        setError(true);\n+        setErrorType('update');\n+      } finally {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+\n+  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    setTitle(e.target.value);\n+  };\n+\n+  const handleKeyDownEdit = async (\n+    e: React.KeyboardEvent<HTMLInputElement>,\n+  ) => {\n+    if (e.key === 'Enter') {\n+      setLoading(true);\n+      await handleBlur();\n+      setLoading(false);\n+    }\n+  };\n+\n+  return (\n+    <div\n+      data-cy=\"Todo\"\n+      data-id={id}\n+      className={`todo ${completed ? 'completed' : ''}`}\n+    >\n+      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n+\n+      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n+        <input\n+          data-cy=\"TodoStatus\"\n+          type=\"checkbox\"\n+          className=\"todo__status\"\n+          checked={completed}\n+          onChange={handleToggle}\n+        />\n+      </label>\n+      {!editing ? (\n+        <span\n+          data-cy=\"TodoTitle\"\n+          className=\"todo__title\"\n+          onDoubleClick={handleDoubleClick}\n+        >\n+          {initialTitle}\n+        </span>\n+      ) : (\n+        <input\n+          className=\"todo__title-field\"\n+          data-cy=\"TodoTitleField\"\n+          type=\"text\"\n+          placeholder=\"Empty todo will be deleted\"\n+          value={title}\n+          onChange={handleChange}\n+          onKeyDown={handleKeyDownEdit}\n+          onBlur={handleBlur}\n+          autoFocus\n+        />\n+      )}\n+      {!editing && (\n+        <button\n+          type=\"button\"\n+          className=\"todo__remove\"\n+          onClick={handleDelete}\n+          data-cy=\"TodoDelete\"\n+          disabled={showLoader || deleteFewTodo.includes(id)}\n+        >\n+          ×\n+        </button>\n+      )}\n+      <Loader\n+        loading={showLoader || loading || loadingTodoId === id}\n+      />\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1715582248643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n       setLoading(true);\n       try {\n-        await updateTodoTitle(id, title);\n+        updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n       } finally {\n@@ -141,160 +141,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader\n-        loading={showLoader || loading || loadingTodoId === id}\n-      />\n+      <Loader loading={showLoader || loading || loadingTodoId === id} />\n     </div>\n   );\n };\n-import React, { useState } from 'react';\n-import { Loader } from './Loader';\n-import { deleteTodo } from '../api/todos';\n-import { Error } from '../Types/Todo';\n-\n-interface Props {\n-  id: number;\n-  title: string;\n-  completed: boolean;\n-  onToggle: () => void;\n-  setError: (setError: boolean) => void;\n-  setErrorType: (setErrorType: Error | null) => void;\n-  onDelete: (id: number) => void;\n-  loadingTodoId: number | null;\n-  loadingAddTodoId: number | null;\n-  setFocus: (setFocus: boolean) => void;\n-  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n-  showLoader: boolean;\n-  setLoading: (setLoading: boolean) => void;\n-  deleteFewTodo: number[];\n-  updateTodoTitle: (id: number, newTitle: string) => void;\n-  loading: boolean;\n-}\n-\n-export const TodoItem: React.FC<Props> = ({\n-  id,\n-  title: initialTitle,\n-  completed,\n-  onToggle,\n-  setError,\n-  setErrorType,\n-  onDelete,\n-  setFocus,\n-  setLoadingTodoId,\n-  showLoader,\n-  loadingTodoId,\n-  deleteFewTodo,\n-  updateTodoTitle,\n-  setLoading,\n-  loading,\n-}) => {\n-  const [editing, setEditing] = useState(false);\n-  const [title, setTitle] = useState(initialTitle);\n-\n-  const handleToggle = () => {\n-    onToggle();\n-  };\n-\n-  const handleDelete = async () => {\n-    setLoadingTodoId(id);\n-    try {\n-      await onDelete(id);\n-      await deleteTodo(id);\n-      setFocus(true);\n-    } catch (err) {\n-      setError(true);\n-      setErrorType('delete');\n-    } finally {\n-      setLoadingTodoId(null);\n-    }\n-  };\n-\n-  const handleDoubleClick = () => {\n-    setEditing(true);\n-  };\n-\n-  const handleBlur = async () => {\n-    setEditing(false);\n-    if (title.trim() !== initialTitle.trim()) {\n-      setLoading(true);\n-      try {\n-        await updateTodoTitle(id, title);\n-      } catch (err) {\n-        setError(true);\n-        setErrorType('update');\n-      } finally {\n-        setLoading(false);\n-      }\n-    }\n-  };\n-\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    setTitle(e.target.value);\n-  };\n-\n-  const handleKeyDownEdit = async (\n-    e: React.KeyboardEvent<HTMLInputElement>,\n-  ) => {\n-    if (e.key === 'Enter') {\n-      setLoading(true);\n-      await handleBlur();\n-      setLoading(false)\n-    }\n-  };\n-\n-  return (\n-    <div\n-      data-cy=\"Todo\"\n-      data-id={id}\n-      className={`todo ${completed ? 'completed' : ''}`}\n-    >\n-      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n-\n-      <label className=\"todo__status-label\" onDoubleClick={handleDoubleClick}>\n-        <input\n-          data-cy=\"TodoStatus\"\n-          type=\"checkbox\"\n-          className=\"todo__status\"\n-          checked={completed}\n-          onChange={handleToggle}\n-        />\n-      </label>\n-      {!editing ? (\n-        <span\n-          data-cy=\"TodoTitle\"\n-          className=\"todo__title\"\n-          onDoubleClick={handleDoubleClick}\n-        >\n-          {initialTitle}\n-        </span>\n-      ) : (\n-        <input\n-          className=\"todo__title-field\"\n-          data-cy=\"TodoTitleField\"\n-          type=\"text\"\n-          placeholder=\"Empty todo will be deleted\"\n-          value={title}\n-          onChange={handleChange}\n-          onKeyDown={handleKeyDownEdit}\n-          onBlur={handleBlur}\n-          autoFocus\n-        />\n-      )}\n-      {!editing && (\n-        <button\n-          type=\"button\"\n-          className=\"todo__remove\"\n-          onClick={handleDelete}\n-          data-cy=\"TodoDelete\"\n-          disabled={showLoader || deleteFewTodo.includes(id)}\n-        >\n-          ×\n-        </button>\n-      )}\n-      <Loader\n-        loading={showLoader || loading || loadingTodoId === id || editing}\n-      />\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1715582351961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n           type=\"button\"\n           className=\"todo__remove\"\n           onClick={handleDelete}\n           data-cy=\"TodoDelete\"\n-          disabled={showLoader || deleteFewTodo.includes(id)}\n+          disabled={deleteFewTodo.includes(id)}\n         >\n           ×\n         </button>\n       )}\n"
                },
                {
                    "date": 1715582362185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,8 +141,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={showLoader || loading || loadingTodoId === id} />\n+      <Loader loading={loading || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715582385731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,8 +141,8 @@\n         >\n           ×\n         </button>\n       )}\n-      <Loader loading={loading || loadingTodoId === id} />\n+      <Loader loading={showLoader || loading || loadingTodoId === id} />\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1715582409304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n           type=\"button\"\n           className=\"todo__remove\"\n           onClick={handleDelete}\n           data-cy=\"TodoDelete\"\n-          disabled={deleteFewTodo.includes(id)}\n+          disabled={showLoader || deleteFewTodo.includes(id)}\n         >\n           ×\n         </button>\n       )}\n"
                },
                {
                    "date": 1715582713176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n     setEditing(false);\n     if (title.trim() !== initialTitle.trim()) {\n       setLoading(true);\n       try {\n-        updateTodoTitle(id, title);\n+        await updateTodoTitle(id, title);\n       } catch (err) {\n         setError(true);\n         setErrorType('update');\n       } finally {\n"
                },
                {
                    "date": 1715583757865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     onToggle();\n   };\n \n   const handleDelete = async () => {\n-    setLoadingTodoId(id);\n+    setLoading(id);\n     try {\n       await onDelete(id);\n       await deleteTodo(id);\n       setFocus(true);\n"
                },
                {
                    "date": 1715583763508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     onToggle();\n   };\n \n   const handleDelete = async () => {\n-    setLoading(id);\n+    setLoading(true);\n     try {\n       await onDelete(id);\n       await deleteTodo(id);\n       setFocus(true);\n"
                },
                {
                    "date": 1715583771874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     } catch (err) {\n       setError(true);\n       setErrorType('delete');\n     } finally {\n-      setLoadingTodoId(null);\n+      setLoading(null);\n     }\n   };\n \n   const handleDoubleClick = () => {\n"
                },
                {
                    "date": 1715583916974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     } catch (err) {\n       setError(true);\n       setErrorType('delete');\n     } finally {\n-      setLoading(null);\n+      setLoading(fal);\n     }\n   };\n \n   const handleDoubleClick = () => {\n"
                },
                {
                    "date": 1715583922116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,18 +46,18 @@\n     onToggle();\n   };\n \n   const handleDelete = async () => {\n-    setLoading(true);\n+    setLoadingTodoId(id);\n     try {\n       await onDelete(id);\n       await deleteTodo(id);\n       setFocus(true);\n     } catch (err) {\n       setError(true);\n       setErrorType('delete');\n     } finally {\n-      setLoading(fal);\n+      setLoadingTodoId(null);\n     }\n   };\n \n   const handleDoubleClick = () => {\n"
                }
            ],
            "date": 1715349613546,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport { Loader } from './Loader';\nimport { deleteTodo } from '../api/todos';\nimport { Error } from '../types/Todo';\n\ninterface Props {\n  id: number;\n  title: string;\n  completed: boolean;\n  onToggle: () => void;\n  setError: (setError: boolean) => void;\n  setErrorType: (setErrorType: Error | null) => void;\n  onDelete: (id: number) => void;\n  loadingTodoId: number | null;\n  loadingAddTodoId: number | null;\n  setFocus: (setFocus: boolean) => void;\n  setLoadingTodoId: (setLoadingTodoId: number | null) => void;\n  showLoader: boolean;\n  setLoading: (setLoading: boolean) => void;\n  deleteFewTodo: number[];\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  id,\n  title,\n  completed,\n  onToggle,\n  setError,\n  setErrorType,\n  onDelete,\n  setFocus,\n  setLoadingTodoId,\n  showLoader,\n  loadingTodoId,\n  deleteFewTodo,\n}) => {\n  const handleDelete = async () => {\n    setLoadingTodoId(id);\n    try {\n      await onDelete(id);\n      await deleteTodo(id);\n      setFocus(true);\n    } catch (err) {\n      setError(true);\n      setErrorType('delete');\n    } finally {\n      setLoadingTodoId(null);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      data-id={id}\n      className={`todo ${completed ? 'completed' : ''}`}\n    >\n      {/* eslint-disable jsx-a11y/label-has-associated-control */}\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={onToggle}\n        />\n      </label>\n\n      <span data-cy=\"TodoTitle\" className=\"todo__title\">\n        {title}\n      </span>\n\n      <button\n        type=\"button\"\n        className=\"todo__remove\"\n        onClick={handleDelete}\n        data-cy=\"TodoDelete\"\n        disabled={showLoader || deleteFewTodo.includes(id)}\n      >\n        ×\n      </button>\n      <Loader loading={showLoader || loadingTodoId === id} />\n    </div>\n  );\n};\n"
        }
    ]
}